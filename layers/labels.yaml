layers:
    road-labels:
        data: { source: jawg, layer: road }
        filter: { $zoom: { min: 14 } }
        draw:
            text:
                text_source: global.name_source
                buffer: 8px
                text_wrap: 25
                max_lines: 3
                priority: 25
                font:
                    family: global.text_font_family
                    fill: global.text_fill_color
                    size: global.text_size
                    stroke: global.text_stroke
                    weight: normal

    # jawg: natural_label, poi_label (w/ type=, zoomrank=) exists

    water-labels:
        data: { source: jawg, layer: [waterway, water] }
        filter: { $zoom: { min: 14 }, not: { structure: tunnel } }
        draw:
            text:
                text_source: global.name_source
                buffer: 12px
                # removing .toString() for some reason leads flickering labels and disappearing quest pins
                # see https://github.com/streetcomplete/streetcomplete-mapstyle/issues/136 and https://github.com/streetcomplete/StreetComplete/issues/4522
                priority: function() { return (20 + feature.scalerank).toString() }
                font:
                    family: global.text_font_family
                    fill: global.text_water_color
                    size: global.text_size
                    stroke: global.text_water_stroke
    marine-labels:
        data: { source: jawg, layer: natural_label }
        filter: { class: [ocean, sea] }
        draw:
            text:
                text_source: global.name_source
                buffer: 12px
                priority: function() { return feature.scalerank }
                font:
                    family: global.text_font_family
                    fill: global.text_water_color
                    size: global.text_size
                    stroke: global.text_water_stroke
                    transform: uppercase

    country-labels:
        data: { source: jawg, layer: place_label }
        filter: { class: country }
        draw:
            text:
                text_source: global.name_source
                buffer: 12px
                priority: function() { return feature.scalerank }
                font:
                    family: global.text_font_family
                    fill: global.text_fill_color
                    size: global.text_size
                    stroke: global.text_countries_stroke
                    transform: uppercase
                    weight: bold

    place-labels:
        data: { source: jawg, layer: place_label }
        filter: { not: { class: country } }
        draw:
            text:
                text_source: global.name_source
                buffer: 4px
                priority: |
                  function() {
                      if(feature.type == "city") {
                          return 10 + feature.scalerank;
                      }
                      if(feature.type == "town") {
                          return 10 + feature.scalerank + 1;
                      }
                      if(feature.type == "village") {
                          return 10 + feature.scalerank + 2;
                      }
                      if(feature.type == "hamlet") {
                          return 10 + feature.scalerank + 3;
                      }
                      if(feature.type == "suburb") {
                          return 10 + feature.scalerank + 4;
                      }
                      if(feature.type == "neighbourhood") {
                          return 10 + feature.scalerank + 5;
                      }
                      /* note that locality and isolated_dwelling are not supported in Jawg */
                      return 10 + feature.scalerank + 6;
                  }
                font:
                    family: global.text_font_family
                    fill: global.text_fill_color
                    size: global.text_size
                    stroke: global.text_places_stroke

        city:
            filter: { type: city, $zoom: { min: 6 } }
            draw:
                text:
                    font:
                        weight: bold

    housenumber-labels:
        data: { source: jawg, layer: housenum_label }
        filter: { $zoom: { min: 19 } }
        draw:
            text:
                text_source: house_num
                priority: 30
                font:
                    family: global.text_font_family
                    fill: global.text_fill_color
                    size: global.text_size
                    stroke: global.text_stroke
